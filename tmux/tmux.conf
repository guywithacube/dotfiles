#===========
# Mouse
#===========
set-option -g mouse on

set-option -gu update-environment
set-option -ga update-environment " COLORTERM"
set-option -ga update-environment " LC_TERMINAL"
set-option -ga update-environment " TERM_PROGRAM"

set-hook -ga session-created {
    if-shell ' \
        [ -n "$TERM" ] && \
        [ -n "$COLORTERM" ] && \
        [ "$COLORTERM" = "truecolor" ] || [ "$COLORTERM" = "24bit" ] \
    ' \
    {
        # https://github.com/vim/vim/issues/3608#issuecomment-849074042
        # https://web.archive.org/https://jdhao.github.io/2018/10/19/tmux_nvim_true_color/
        set-option -su terminal-overrides
        set-option -saF terminal-overrides ",$TERM:Tc"
    } \
    {
        set-option -su terminal-overrides
    }
}

set-hook -ga client-attached {
    set-hook -R session-created
}

set-option -g default-command ' \
: " \
Comments are written in this format to maintain POSIX compliance and because \
the #-method of commenting is incompatible with single-line commands. \
https://stackoverflow.com/a/2524407 \
"; \
\
: " \
Attempt to use TERM of tmux when possible. \
Check host for tmux terminfo. \
"; \
if infocmp "tmux" > /dev/null 2>&1; then \
    TERM="tmux"; \
fi; \
\
: " \
Append \"-256color\" to TERM when possible. \
Check that the client terminal supports 256 color and verify that there is a \
terminfo entry for $TERM-256color. \
"; \
client_termname=$(tmux display-message -p "#{client_termname}"); \
if [ "$(tput -T "$client_termname" colors)" = "256" ] && \
    infocmp "$TERM-256color" > /dev/null 2>&1; then \
    TERM="$TERM-256color"; \
fi; \
\
: " \
Emulate the default \"default-command\" functionality of tmux. \
Create a login shell using the \"default-shell\". \
"; \
default_shell=$(tmux display-message -p "#{default-shell}"); \
exec $default_shell -l'

#===========
# Disable ESC key delay
#===========
set -sg escape-time 0

#===========
# Binds
#===========
# "r" to reload the tmux configuration
bind-key r {
    confirm-before -p 'Reload tmux config? (y/n)' \
    {
        source $HOME/.tmux.conf
        display-message "tmux config reloaded"
    }
}
# "k" as kill current session
bind k confirm-before -p "Kill current session? (y/n)" "kill-session"

#===========
# Open new windows in pwd
#===========
bind "c" new-window -c "#{pane_current_path}"
# Split vertically
bind '"' split-window -c "#{pane_current_path}"
bind '-' split-window -c "#{pane_current_path}"
bind '_' split-window -c "#{pane_current_path}"
# Split horizontally
bind "%" split-window -h -c "#{pane_current_path}"
bind "|" split-window -h -c "#{pane_current_path}"
bind "\\" split-window -h -c "#{pane_current_path}"

#===========
# Nested sessions
#===========
# "Control+a" to send prefix
bind-key -n C-a send-prefix

#===========
# Pane border
#===========
set-option -gw pane-border-status bottom
set-option -gw pane-border-format "#{pane_index} #{pane_current_command}"

#===========
# Window numering
#===========
set-option -g renumber-windows on
